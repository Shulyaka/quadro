fixed det(fixed a[3][3])
{ return a[0][0]*a[1][1]*a[2][2]-a[0][2]*a[1][1]*a[2][0]+a[0][1]*a[1][2]*a[2][0]-a[0][1]*a[1][0]*a[2][2]+a[0][2]*a[1][0]*a[2][1]-a[0][0]*a[1][2]*a[2][1]; }

fixed det(fixed a[4][4])
{
  fixed m[3][3];
  fixed d;
  m[0][0]=a[1][1]; m[0][1]=a[1][2]; m[0][2]=a[1][3];
  m[1][0]=a[2][1]; m[1][1]=a[2][2]; m[1][2]=a[2][3];
  m[2][0]=a[3][1]; m[2][1]=a[3][2]; m[2][2]=a[3][3];
  d=a[0][0]*det(m);
  m[0][0]=a[1][0];
  m[1][0]=a[2][0];
  m[2][0]=a[3][0];
  d=d-a[0][1]*det(m);
  m[0][1]=a[1][1];
  m[1][1]=a[2][1];
  m[2][1]=a[3][1];
  d=d+a[0][2]*det(m);
  m[0][2]=a[1][2];
  m[1][2]=a[2][2];
  m[2][2]=a[3][2];
  return d-a[0][3]*det(m);
}

fixed det(fixed a[5][5])
{
  fixed m[4][4];
  fixed d;
  m[0][0]=a[1][1]; m[0][1]=a[1][2]; m[0][2]=a[1][3]; m[0][3]=a[1][4];
  m[1][0]=a[2][1]; m[1][1]=a[2][2]; m[1][2]=a[2][3]; m[1][3]=a[2][4];
  m[2][0]=a[3][1]; m[2][1]=a[3][2]; m[2][2]=a[3][3]; m[2][3]=a[3][4];
  m[3][0]=a[4][1]; m[3][1]=a[4][2]; m[3][2]=a[4][3]; m[3][3]=a[4][4];
  d=a[0][0]*det(m);
  m[0][0]=a[1][0];
  m[1][0]=a[2][0];
  m[2][0]=a[3][0];
  m[3][0]=a[4][0];
  d=d-a[0][1]*det(m);
  m[0][1]=a[1][1];
  m[1][1]=a[2][1];
  m[2][1]=a[3][1];
  m[3][1]=a[4][1];
  d=d+a[0][2]*det(m);
  m[0][2]=a[1][2];
  m[1][2]=a[2][2];
  m[2][2]=a[3][2];
  m[3][2]=a[4][2];
  d=d-a[0][3]*det(m);
  m[0][3]=a[1][3];
  m[1][3]=a[2][3];
  m[2][3]=a[3][3];
  m[3][3]=a[4][3];
  return d+a[0][4]*det(m);
}

fixed det(fixed a[6][6])
{
  const byte n=6-1;
  fixed m[n][n];
  fixed d=0;
  byte i, j;
  
  for(i=0; i<n; i++)
    for(j=0; j<n; j++)
      m[i][j]=a[i+1][j+1];

  for(j=0; j<n; j++)
  {
    if(j==(j>>1)<<1)
      d=d+a[0][j]*det(m);
    else
      d=d-a[0][j]*det(m);
      
    for(i=0; i<n; i++)
      m[i][j]=a[i+1][j];
  }

  return (n==(n>>1)<<1)? d+a[0][n]*det(m) : d-a[0][n]*det(m);
}

bool lsolve(fixed a[6][6], fixed r[6], fixed x[6])
{
  fixed m[6][6];
  fixed d=det(a);
  byte i, j;
  if(d==0)
  {
    for(i=0; i<6; i++)
      x[i]=one;
    return false;
  }

  for(i=0; i<6; i++)
    for(j=1; j<6; j++)
      m[i][j]=a[i][j];

  for(j=0; j<6; j++)
  {
    for(i=0; i<6; i++)
      m[i][j]=r[i];

    x[j]=det(m)%one/d;

    if(j!=5)
      for(i=0; i<6; i++)
        m[i][j]=a[i][j];
  }

  return true;
}

